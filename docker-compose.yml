version: '3.8'

services:
  # Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - auth-service
      - redis
      - postgres

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/skyscout
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-here
    depends_on:
      - postgres
      - redis

  # Search Engine (Rust)
  search-engine:
    build:
      context: apps/search-engine
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/skyscout

  # ML Service (Python)
  ml-service:
    build:
      context: apps/ml-service
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/skyscout

  # Databases
  postgres:
    image: timescale/timescaledb:latest-pg15
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=skyscout
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/sql/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  # Search Engine
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: opensearch
    environment:
      - cluster.name=skyscout-cluster
      - node.name=skyscout-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m'
      - 'DISABLE_INSTALL_DEMO_CONFIG=true'
      - 'DISABLE_SECURITY_PLUGIN=true'
    ports:
      - '9200:9200'
      - '9600:9600'
    volumes:
      - opensearch_data:/usr/share/opensearch/data

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/grafana/datasources:/etc/grafana/provisioning/datasources

volumes:
  postgres_data:
  redis_data:
  opensearch_data:
  prometheus_data:
  grafana_data:
